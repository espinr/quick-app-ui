<import name="q-icon" src="../../components/icon/index"></import>

<template>
  <div class="qaui-collapse">
    <div class="qaui-collapse-hd" onclick="clickHandler">
      <div class="qaui-collapse-hd-left">
        <div class="qaui-collapse-hd-icon-wrapper" if="{{ icon }}">
          <q-icon
            if="{{ icon }}"
            type="{{ icon }}"
            size="20"
            color="#D0D0D0"
          ></q-icon>
        </div>
        <image
          if="{{ thumb }}"
          class="qaui-collapse-hd-thumb"
          src="{{ thumb }}"
        ></image>
        <text if="{{ title }}" class="qaui-collapse-hd-title">{{ title }}</text>
      </div>
      <div class="{{ iconClass }}">
        <q-icon type="forward-arrow" size="14" color="#D0D0D0"></q-icon>
      </div>
    </div>
    <div if="{{ isActive }}" class="qaui-collapse-bd">
      <div if="{{ content }}" class="qaui-collapse-bd-content">
        <text>{{ content }}</text>
      </div>
      <slot></slot>
    </div>
  </div>
</template>

<script>
export default {
  data() {
    return {
      isActive: false,
      index: '0',
    }
  },

  props: {
    title: {
      type: String,
      default: '',
    },
    content: {
      type: String,
      default: '',
    },
    groupId: {
      type: String,
      required: true,
    },
    key: {
      type: String,
      default: '',
    },
    disabled: {
      type: Boolean,
      default: false,
    },
    icon: {
      type: String,
      default: '',
    },
    thumb: {
      type: String,
      default: '',
    },
  },

  computed: {
    iconClass() {
      return this.isActive
        ? 'qaui-collapse-hd-right-clicked'
        : 'qaui-collapse-hd-right'
    },
  },

  changeIsActive(index, isActive) {
    this.isActive = isActive
    this.index = index
  },

  clickHandler() {
    const { key, disabled } = this
    if (disabled) return
    const parent = this.$parent().$child(this.groupId)
    this.isActive = true
    parent.onClickItem(key)
  },
}
</script>

<style lang="less">
@import '../common.less';

.qaui-collapse {
  flex-direction: column;
  margin-left: 21px * @ratio;
  margin-right: 19px * @ratio;

  &-hd {
    width: 100%;
    height: 52px * @ratio;
    border-bottom: 1px * @ratio solid #f2f2f2;
    align-items: center;

    &-title {
      font-size: 16px * @ratio;
      color: #000000;
      font-family: HYQiHei-EES;
      line-height: 20px * @ratio;
    }

    &-thumb {
      margin-right: 9px * @ratio;
      width: 30px * @ratio;
      height: 30px * @ratio;
    }

    &-icon-wrapper {
      margin-right: 9px * @ratio;
      width: 20px * @ratio;
      height: 20px * @ratio;
    }

    @keyframes rotate {
      from {
        transform: rotate(0deg);
      }
      to {
        transform: rotate(90deg);
      }
    }

    @keyframes rotate2 {
      from {
        transform: rotate(90deg);
      }
      to {
        transform: rotate(0deg);
      }
    }

    &-right {
      position: absolute;
      right: 0;
      animation-name: rotate2;
      animation-duration: 0.2s;
      animation-timing-function: ease;
      animation-fill-mode: forwards;

      &-clicked {
        position: absolute;
        right: 0;
        animation-name: rotate;
        animation-duration: 0.2s;
        animation-timing-function: ease;
        animation-fill-mode: forwards;
      }
    }
  }

  &-bd {
    width: 100%;
    margin-top: 13px * @ratio;
    margin-bottom: 12px * @ratio;

    &-content {
      text {
        font-size: 16px * @ratio;
        color: #000000;
        font-family: HYQiHei-EES;
        line-height: 20px * @ratio;
        opacity: 0.6;
      }
    }
  }
}
</style>
