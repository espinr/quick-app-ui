<template>
  <div class="qaui-wrap">
    <div class="left-icon" if="leftBtn">
      <image
        if="leftBtn!=='back'"
        onclick="leftClickHandler"
        src="{{leftBtn}}"
        class="icon"
      ></image>
      <image
        if="leftBtn==='back'"
        onclick="goBack"
        src="../../common/images/back.svg"
        class="icon icon-back"
      ></image>
    </div>
    <div class="search {{menubar ? 'menubar': ''}}">
      <image
        class="icon icon-search"
        src="../../common/images/search.svg"
      ></image>
      <input
        class="input"
        id="input"
        type="text"
        enterkeytype="search"
        value="{{inputValue}}"
        maxlength="{{maxlength}}"
        placeholder="{{placeholder}}"
        onenterkeyclick="enterEvent"
        onchange="bindChange"
        onfocus="bindFocus"
        onblur="bindBlur"
      />
      <image
        class="icon icon-clear"
        src="../../common/images/clear.svg"
        onclick="bindClear"
        if="inputValue"
      ></image>
    </div>
    <div
      class="right-icon"
      if="{{!menubar && rightBtn}}"
      onclick="rightClickHandler"
    >
      <image
        if="rightBtn && rightBtn!=='search'"
        src="{{rightBtn}}"
        class="icon"
      ></image>
      <text if="rightBtn==='search'" class="search-btn">搜索</text>
    </div>
  </div>
</template>

<script>
import router from '@system.router'

export default {
  data() {
    return {
      inputValue: '',
    }
  },
  props: {
    leftBtn: {
      default: '', // back
    },
    rightBtn: {
      default: '', // search
    },
    placeholder: {
      default: '搜索',
    },
    maxlength: {
      default: 50,
    },
    focus: {
      default: false,
    },
    value: {
      default: '',
    },
    menubar: {
      default: false,
    },
  },
  onInit() {
    if (this.value) {
      this.inputValue = this.value
    }
  },
  onReady() {
    if (this.focus) {
      this.$element('input').focus({ focus: true })
    }
  },
  bindFocus(evt) {
    this.$emit('focus', { event: evt })
    this.$element('input').focus({ focus: true })
  },
  bindBlur(evt) {
    this.$emit('blur', { event: evt })
    this.$element('input').focus({ focus: false })
  },
  bindClear() {
    this.$emit('clear', { value: this.inputValue })
    this.inputValue = ''
  },
  bindChange(evt) {
    this.$emit('change', { event: evt })
    this.inputValue = evt.value
  },
  enterEvent(evt) {
    this.$emit('enterkeyclick', { event: evt })
    this.$element('input').focus({ focus: false })
  },
  leftClickHandler() {
    this.$emit('left', { value: this.inputValue })
  },
  rightClickHandler() {
    this.$emit('right', { value: this.inputValue })
  },
  goBack() {
    router.back()
  },
}
</script>

<style lang="less">
@import '../common';
.qaui-wrap {
  background-color: #ffffff;
  height: 48px * @ratio;
  padding: 0 20px * @ratio;
  .icon {
    height: 24px * @ratio;
    width: 24px * @ratio;
    align-self: center;
    margin: 2px * @ratio;
  }
  .left-icon image {
    margin-right: 10px * @ratio;
  }
  .right-icon image {
    margin-left: 16px * @ratio;
  }
  .icon-clear {
    padding: 4px * @ratio;
  }
  .search {
    flex-grow: 1;
    height: 26px * @ratio;
    background-color: #f2f2f2;
    border-radius: 26px * @ratio;
    align-self: center;
    padding: 0 9px * @ratio;
    .input {
      placeholder-color: #cccccc;
      caret-color: @primary-color;
      flex-grow: 1;
      font-size: 14px * @ratio;
      lines: 1;
      text-overflow: ellipsis;
    }
  }
  .menubar {
    width: 226px * @ratio;
    flex-grow: 0;
  }
  .search-btn {
    font-size: 16px * @ratio;
    color: #456fff;
    text-align: right;
    line-height: 20px * @ratio;
    margin-left: 16px * @ratio;
  }
}
</style>
